<?php

namespace Homeful\Contacts\Data;

use Homeful\Contacts\Models\Contact;
use NumberToWords\NumberToWords;

class FlatData extends \Spatie\LaravelData\Data
{
    public function __construct(
        public string $brn,
        public string $buyer_first_name,
        public ?string $buyer_middle_name,
        public string $buyer_last_name,
        public string $buyer_name,
        public string $buyer_civil_status,
        public ?string $buyer_spouse_name,
        public string $buyer_nationality,
        public ?string $buyer_tin,
        public string $buyer_gender,
        public ?string $buyer_principal_email,
        public ?string $buyer_primary_contact_number,
        public ?string $buyer_other_contact_number,
        public ?string $buyer_province,
        public ?string $buyer_birthday,
        public ?string $buyer_residence_type,
        public ?string $buyer_ownership_type,
        public ?string $buyer_unit_lot, // can't be declare as a buyer_unit/lot
        public ?string $buyer_block,
        public ?string $buyer_street,
        public ?string $buyer_barangay,
        public ?string $buyer_city,
        public ?string $buyer_place_of_residency_1_city_of_residency,
        public ?string $buyer_place_of_residency_2_province_of_residency,
        public ?string $buyer_sss_gsis_number,
        public ?string $buyer_pagibig_number,

     
        public ?string $spouse_name,
        public ?string $spouse_civil_status,
        public ?string $spouse_nationality,
        public ?string $spouse_gender,
        public ?string $spouse_principal_email,
        public ?string $spouse_mobile,
        public ?string $client_id_spouse,
        public ?string $spouse_fb_account_name,

        public ?string $buyer_address,

        public ?string $company_name,
        public ?string $project_name,
        public ?string $project_code,
        public ?string $project_location,
        public ?string $project_address,
        public ?string $property_name,
        public ?string $phase,
        public ?string $block,
        public ?string $lot,

        public ?string $mrif_fee,
        public ?string $reservation_rate,

        public ?string $lot_area,
        public ?string $lot_area_in_words,
        public ?string $floor_area,
        public ?string $floor_area_in_words,

        public ?string $tcp,
        public ?string $tcp_in_words,
        public ?string $loan_term,
        public ?string $loan_interest_rate,
        public ?string $tct_no,
        public ?string $sku,
        public ?string $seller_commission_code,
        public ?string $property_code,
        public ?string $os_status,
        public ?string $class_field,
        public ?string $segment_field,
        public ?string $rebooked_id_form,
        public ?string $cancellation_type,
        public ?string $cancellation_reason,
        public ?string $cancellation_remarks,
        public ?string $unit_type,
        public ?string $unit_type_interior,
        public ?string $house_color,
        public ?string $construction_status,
        public ?string $transaction_reference,
        public ?string $help_number,
        public ?string $date_created,
        public ?string $ra_date,
        public ?string $date_approved,
        public ?string $date_expiration,
        public ?string $os_month,
        public ?string $due_date,
        public ?string $total_payments_made,
        public ?string $transaction_status,
        public ?string $staging_status,
        public ?string $period_id,
        public ?string $date_closed,
        public ?string $closed_reason,
        public ?string $date_cancellation,
        public ?string $discount_rate,
        public ?string $conditional_discount,
        public ?string $evat_percentage,
        public ?string $total_contract_price,
        public ?string $evat_amount,
        public ?string $net_total_contact_price,
        // public string $payment_scheme, error
        public ?string $payment_method_name,
        public ?string $collectible_price,
        public ?string $reservation_date,
        public ?string $commissionable_amount,
        public ?string $transaction_sub_status,
        public ?string $pf_amount_paid,
        public ?string $pf_payment_reference_number,
        public ?string $pf_payment_date,
        public ?string $hucf_amount_paid,
        public ?string $hucf_payment_reference_number,
        public ?string $hucf_payment_date,
        public ?string $balance_payment_amount_paid,
        public ?string $balance_payment_reference_number,
        public ?string $balance_payment_date,
        public ?string $equity_payment_amount_paid,
        public ?string $equity_payment_reference_number,
        public ?string $equity_payment_date,
        public ?string $payment_remarks,
        public ?string $transaction_remarks,
        public ?string $mothers_maiden_name,
        public ?string $baf_number,
        public ?string $baf_date,
        public ?string $client_id,
        public ?string $buyer_age,
        public ?string $buyer_subdivision,
        public ?string $rental_fee,
        public ?string $years_of_residency,
        public ?string $present_buyer_unit_lot,
        public ?string $present_buyer_street,
        public ?string $present_buyer_subdivision,
        public ?string $present_buyer_barangay,
        public ?string $present_buyer_city,
        public ?string $present_buyer_province,
        public ?string $present_buyer_ownership_type,
        public ?string $present_rental_fee,
        public ?string $present_years_of_residency,
        public ?string $buyer_residence_landline,
        public ?string $buyer_fb_account_name,
        public ?string $buyer_company_email_address,
        public ?string $buyer_spouse_last_name,
        public ?string $buyer_spouse_middle_name,
        public ?string $spouse_extension_name,
        public ?string $spouse_mothers_maiden_name,
        public ?string $spouse_birthday,
        public ?string $buyer_spouse_first_name,
        public ?string $spouse_primary_contact_number,
        public ?string $spouse_residence_landline,
        public ?string $building,
        public ?string $floor,
        public ?string $unit,
        public ?string $aif_name,

    ) {}

    public static function fromModel(Contact $model): self
    {
        $numberToWords = new NumberToWords;
        $data = ContactData::fromModel($model);

        // dd($data);
        return new self(
            brn: $data->reference_code,
            buyer_first_name: $data->profile->first_name,
            buyer_middle_name: $data->profile->middle_name,
            buyer_last_name: $data->profile->last_name,
            buyer_name: $data->profile->first_name.' '.$data->profile->middle_name.' '.$data->profile->last_name,
            buyer_birthday: $data->profile->date_of_birth,
            buyer_civil_status: $data->profile->civil_status,
            buyer_spouse_name: $data->spouse->first_name.' '.$data->spouse->middle_name.' '.$data->spouse->last_name,
            buyer_nationality: $data->profile->nationality,
            buyer_tin: ($data->employment->count() === 0) ? '' : $data->employment->id->tin,
            buyer_sss_gsis_number: ($data->employment->count() === 0) ? '' : $data->employment->id->sss_gsis,
            buyer_pagibig_number: ($data->employment->count() === 0) ? '' : $data->employment->id->pagibig_number,
            buyer_gender: $data->profile->sex,
            buyer_principal_email: $data->profile->email,
            buyer_primary_contact_number: $data->profile->mobile,
            buyer_other_contact_number: $data->profile->other_mobile,
            help_number: $data->profile->help_number,
            mothers_maiden_name: $data->profile->mothers_maiden_name,
            buyer_residence_landline: $data->profile->landline,
            buyer_fb_account_name: $data->profile->first_name.' '.$data->profile->middle_name.' '.$data->profile->last_name,
            buyer_company_email_address: $data->profile->email,

            buyer_spouse_first_name: $data->spouse->first_name,
            buyer_spouse_middle_name: $data->spouse->middle_name,
            buyer_spouse_last_name: $data->spouse->last_name,
            spouse_name: $data->spouse->first_name.' '.$data->spouse->middle_name.' '.$data->spouse->last_name,
            spouse_civil_status: $data->spouse->civil_status,
            spouse_nationality: $data->spouse->nationality,
            spouse_gender: $data->spouse->sex,
            spouse_birthday: $data->spouse->date_of_birth,
            spouse_principal_email: $data->spouse->email,
            spouse_mobile: $data->spouse->mobile,
            client_id_spouse: $data->order->client_id_spouse, // temporary location of client_id

           
            spouse_extension_name: $data->spouse->name_suffix,
            spouse_mothers_maiden_name: $data->spouse->mothers_maiden_name,
            spouse_primary_contact_number: $data->spouse->mobile,
            spouse_residence_landline: $data->spouse->landline,
            spouse_fb_account_name: $data->spouse->first_name.' '.$data->spouse->middle_name.' '.$data->spouse->last_name,
            

            buyer_address: $data->addresses->toCollection()->firstWhere('type', 'primary')->full_address,
            buyer_province: $data->addresses->toCollection()->firstWhere('type', 'primary')->administrative_area,
            buyer_residence_type: $data->addresses->toCollection()->firstWhere('type', 'primary')->type,
            buyer_ownership_type: $data->addresses->toCollection()->firstWhere('type', 'primary')->ownership,
            buyer_unit_lot: $data->addresses->toCollection()->firstWhere('type', 'primary')->unit,
            buyer_block: $data->addresses->toCollection()->firstWhere('type', 'primary')->block,
            buyer_street: $data->addresses->toCollection()->firstWhere('type', 'primary')->street,
            buyer_barangay: $data->addresses->toCollection()->firstWhere('type', 'primary')->sublocality,
            buyer_city: $data->addresses->toCollection()->firstWhere('type', 'primary')->locality,
            buyer_place_of_residency_1_city_of_residency: $data->addresses->toCollection()->firstWhere('type', 'primary')->address1,
            buyer_place_of_residency_2_province_of_residency: $data->addresses->toCollection()->firstWhere('type', 'primary')->address2,
            buyer_subdivision: $data->addresses->toCollection()->firstWhere('type', 'primary')->street,
            years_of_residency: $data->addresses->toCollection()->firstWhere('type', 'primary')->length_of_stay,
            present_buyer_unit_lot: $data->addresses->toCollection()->firstWhere('type', 'primary')->unit,
            present_buyer_street: $data->addresses->toCollection()->firstWhere('type', 'primary')->street,
            present_buyer_subdivision: $data->addresses->toCollection()->firstWhere('type', 'primary')->street,
            present_buyer_barangay: $data->addresses->toCollection()->firstWhere('type', 'primary')->sublocality,
            present_buyer_city: $data->addresses->toCollection()->firstWhere('type', 'primary')->locality,
            present_buyer_province: $data->addresses->toCollection()->firstWhere('type', 'primary')->administrative_area,
            present_buyer_ownership_type: $data->addresses->toCollection()->firstWhere('type', 'primary')->ownership,
            present_years_of_residency: $data->addresses->toCollection()->firstWhere('type', 'primary')->length_of_stay,
            building: $data->addresses->toCollection()->firstWhere('type', 'primary')->building,
            floor: $data->addresses->toCollection()->firstWhere('type', 'primary')->floor,
            unit: $data->addresses->toCollection()->firstWhere('type', 'primary')->unit,

            aif_address: $data->addresses->toCollection()->firstWhere('type', 'co_borrower')->unit,

            company_name: $data->order->company_name,
            project_name: $data->order->project_name,
            project_code: $data->order->project_code,
            project_location: $data->order->project_location,
            project_address: $data->order->project_address,
            property_name: $data->order->property_name,
            phase: $data->order->phase,
            block: $data->order->block,
            lot: $data->order->lot,

            mrif_fee: $data->order->mrif_fee,
            reservation_rate: $data->order->reservation_rate,

            lot_area: $data->order->lot_area,
            lot_area_in_words: $data->order->lot_area == null ? '' : $numberToWords->getNumberTransformer('en')->toWords($data->order->lot_area),
            floor_area: $data->order->floor_area,
            floor_area_in_words: $data->order->floor_area == null ? '' : $numberToWords->getNumberTransformer('en')->toWords($data->order->floor_area),

            tcp: $data->order->tcp ?? '',
            tcp_in_words: isset($data->order->tcp) ? $numberToWords->getNumberTransformer('en')->toWords($data->order->tcp) : '',
            loan_term: $data->order->loan_term,
            loan_interest_rate: $data->order->loan_interest_rate,
            tct_no: $data->order->tct_no,

            sku: $data->order->sku,
            seller_commission_code: $data->order->seller_commission_code,
            property_code: $data->order->property_code,
            baf_number: $data->order->baf_number,
            baf_date: $data->order->baf_date,
            client_id: $data->order->client_id_buyer,
            buyer_age: $data->order->buyer_age,

            os_status: $data->order->os_status,
            class_field: $data->order->class_field,
            segment_field: $data->order->segment_field,
            rebooked_id_form: $data->order->rebooked_id_form, // for checking
            cancellation_type: $data->order->cancellation_type,
            cancellation_reason: $data->order->cancellation_reason,
            cancellation_remarks: $data->order->cancellation_remarks,
            unit_type: $data->order->unit_type,
            unit_type_interior: $data->order->unit_type_interior,
            house_color: $data->order->house_color,
            construction_status: $data->order->construction_status,
            transaction_reference: $data->order->transaction_reference,
            date_created: $data->order->date_created,
            ra_date: $data->order->ra_date,
            date_approved: $data->order->date_approved,
            date_expiration: $data->order->date_expiration,
            os_month: $data->order->os_month,
            due_date: $data->order->due_date,
            total_payments_made: $data->order->total_payments_made,
            transaction_status: $data->order->transaction_status,
            staging_status: $data->order->staging_status,
            period_id: $data->order->period_id,
            date_closed: $data->order->date_closed,
            closed_reason: $data->order->closed_reason,
            date_cancellation: $data->order->date_cancellation,
            reservation_date: $data->order->reservation_date,

            // payment_scheme: $data->order->payment_scheme,
            discount_rate: $data->order->payment_scheme->discount_rate,
            conditional_discount: $data->order->payment_scheme->conditional_discount,
            evat_percentage: $data->order->payment_scheme->evat_percentage,
            total_contract_price: $data->order->payment_scheme->total_contact_price,
            evat_amount: $data->order->payment_scheme->evat_amount,
            net_total_contact_price: $data->order->payment_scheme->net_total_contact_price,
            payment_method_name: $data->order->payment_scheme->method,
            collectible_price: $data->order->payment_scheme->collectible_price,
            commissionable_amount: $data->order->payment_scheme->commissionable_amount,
            transaction_sub_status: $data->order->payment_scheme->transaction_sub_status,
            payment_remarks: $data->order->payment_scheme->payment_remarks,
            transaction_remarks: $data->order->payment_scheme->transaction_remarks,

            pf_amount_paid: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'processing_fee')->amount_paid,
            pf_payment_reference_number: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'processing_fee')->reference_number,
            pf_payment_date: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'processing_fee')->date,
            hucf_amount_paid: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'home_utility_connection_fee')->amount_paid,
            hucf_payment_reference_number: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'home_utility_connection_fee')->reference_number,
            hucf_payment_date: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'home_utility_connection_fee')->date,
            balance_payment_amount_paid: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'balance')->amount_paid,
            balance_payment_reference_number: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'balance')->reference_number,
            balance_payment_date: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'balance')->date,
            equity_payment_amount_paid: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'equity')->amount_paid,
            equity_payment_reference_number: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'equity')->reference_number,
            equity_payment_date: $data->order->payment_scheme->payments->toCollection()->firstWhere('type', 'equity')->date,

            rental_fee: $data->order->payment_scheme->fees->toCollection()->firstWhere('name' , 'rental')->amount,
            present_rental_fee: $data->order->payment_scheme->fees->toCollection()->firstWhere('name' , 'rental')->amount,

            aif_name: $data->co_borrower->aif_name ?? "",

        );
    }
}
